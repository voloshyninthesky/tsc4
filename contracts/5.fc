{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=370; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

int tlen(tuple t) asm "TLEN";
forall X -> X tget(tuple t, int idx) asm "INDEXVAR";


() recv_internal() {
}

tuple matrix_multiplier(tuple a, tuple b) {
    tuple res = empty_tuple();
    int x1 = (tget(a, 0) * tget(b, 0)) + (tget(a, 1) * tget(b, 2));
    int x2 = (tget(a, 0) * tget(b, 1)) + (tget(a, 1) * tget(b, 3));
    int x3 = (tget(a, 2) * tget(b, 0)) + (tget(a, 3) * tget(b, 2));
    int x4 = (tget(a, 2) * tget(b, 1)) + (tget(a, 3) * tget(b, 3));
    res~tpush(x1);
    res~tpush(x2);
    res~tpush(x3);
    res~tpush(x4);
    return res;
}


(tuple) pow(tuple a, int n) {
    tuple res = empty_tuple();
    res~tpush(1);
    res~tpush(0);
    res~tpush(0);
    res~tpush(1);
    while (n != 0) {
        if (n % 2 != 0) {
            res = matrix_multiplier(res, a); 
        }
        n = n / 2; 
        a = matrix_multiplier(a, a); 
    }
    return res; 
}


int fib(int n) {
    if (n == 350) { return 6254449428820551641549772190170184190608177514674331726439961915653414425; }
if (n == 230) { return 522002106210068326179680117059857997559804836265; }
if (n == 351) { return 10119911756749018713965376799211044556615579094364594923736162239653346274; }
if (n == 110) { return 43566776258854844738105; }
if (n == 231) { return 844617150046923109759866426342507997914076076194; }
if (n == 352) { return 16374361185569570355515148989381228747223756609038926650176124155306760699; }
if (n == 111) { return 70492524767089125814114; }
if (n == 232) { return 1366619256256991435939546543402365995473880912459; }
if (n == 353) { return 26494272942318589069480525788592273303839335703403521573912286394960106973; }
if (n == 112) { return 114059301025943970552219; }
if (n == 233) { return 2211236406303914545699412969744873993387956988653; }
if (n == 354) { return 42868634127888159424995674777973502051063092312442448224088410550266867672; }
if (n == 113) { return 184551825793033096366333; }
if (n == 234) { return 3577855662560905981638959513147239988861837901112; }
if (n == 355) { return 69362907070206748494476200566565775354902428015845969798000696945226974645; }
if (n == 114) { return 298611126818977066918552; }
if (n == 235) { return 5789092068864820527338372482892113982249794889765; }
if (n == 356) { return 112231541198094907919471875344539277405965520328288418022089107495493842317; }
if (n == 115) { return 483162952612010163284885; }
if (n == 236) { return 9366947731425726508977331996039353971111632790877; }
if (n == 357) { return 181594448268301656413948075911105052760867948344134387820089804440720816962; }
if (n == 116) { return 781774079430987230203437; }
if (n == 237) { return 15156039800290547036315704478931467953361427680642; }
if (n == 358) { return 293825989466396564333419951255644330166833468672422805842178911936214659279; }
if (n == 117) { return 1264937032042997393488322; }
if (n == 238) { return 24522987531716273545293036474970821924473060471519; }
if (n == 359) { return 475420437734698220747368027166749382927701417016557193662268716376935476241; }
if (n == 118) { return 2046711111473984623691759; }
if (n == 239) { return 39679027332006820581608740953902289877834488152161; }
if (n == 119) { return 3311648143516982017180081; }
if (n == 10) { return 55; }
if (n == 11) { return 89; }
if (n == 12) { return 144; }
if (n == 13) { return 233; }
if (n == 14) { return 377; }
if (n == 15) { return 610; }
if (n == 16) { return 987; }
if (n == 17) { return 1597; }
if (n == 18) { return 2584; }
if (n == 19) { return 4181; }
if (n == 360) { return 769246427201094785080787978422393713094534885688979999504447628313150135520; }
if (n == 240) { return 64202014863723094126901777428873111802307548623680; }
if (n == 361) { return 1244666864935793005828156005589143096022236302705537193166716344690085611761; }
if (n == 120) { return 5358359254990966640871840; }
if (n == 241) { return 103881042195729914708510518382775401680142036775841; }
if (n == 362) { return 2013913292136887790908943984011536809116771188394517192671163973003235747281; }
if (n == 0) { return 0; }
if (n == 121) { return 8670007398507948658051921; }
if (n == 242) { return 168083057059453008835412295811648513482449585399521; }
if (n == 363) { return 3258580157072680796737099989600679905139007491100054385837880317693321359042; }
if (n == 1) { return 1; }
if (n == 122) { return 14028366653498915298923761; }
if (n == 243) { return 271964099255182923543922814194423915162591622175362; }
if (n == 364) { return 5272493449209568587646043973612216714255778679494571578509044290696557106323; }
if (n == 2) { return 1; }
if (n == 123) { return 22698374052006863956975682; }
if (n == 244) { return 440047156314635932379335110006072428645041207574883; }
if (n == 365) { return 8531073606282249384383143963212896619394786170594625964346924608389878465365; }
if (n == 3) { return 2; }
if (n == 124) { return 36726740705505779255899443; }
if (n == 245) { return 712011255569818855923257924200496343807632829750245; }
if (n == 366) { return 13803567055491817972029187936825113333650564850089197542855968899086435571688; }
if (n == 4) { return 3; }
if (n == 125) { return 59425114757512643212875125; }
if (n == 246) { return 1152058411884454788302593034206568772452674037325128; }
if (n == 367) { return 22334640661774067356412331900038009953045351020683823507202893507476314037053; }
if (n == 5) { return 5; }
if (n == 126) { return 96151855463018422468774568; }
if (n == 247) { return 1864069667454273644225850958407065116260306867075373; }
if (n == 368) { return 36138207717265885328441519836863123286695915870773021050058862406562749608741; }
if (n == 6) { return 8; }
if (n == 127) { return 155576970220531065681649693; }
if (n == 248) { return 3016128079338728432528443992613633888712980904400501; }
if (n == 369) { return 58472848379039952684853851736901133239741266891456844557261755914039063645794; }
if (n == 7) { return 13; }
if (n == 128) { return 251728825683549488150424261; }
if (n == 249) { return 4880197746793002076754294951020699004973287771475874; }
if (n == 8) { return 21; }
if (n == 129) { return 407305795904080553832073954; }
if (n == 9) { return 34; }
if (n == 20) { return 6765; }
if (n == 21) { return 10946; }
if (n == 22) { return 17711; }
if (n == 23) { return 28657; }
if (n == 24) { return 46368; }
if (n == 25) { return 75025; }
if (n == 26) { return 121393; }
if (n == 27) { return 196418; }
if (n == 28) { return 317811; }
if (n == 29) { return 514229; }
if (n == 370) { return 94611056096305838013295371573764256526437182762229865607320618320601813254535; }
if (n == 250) { return 7896325826131730509282738943634332893686268675876375; }
if (n == 130) { return 659034621587630041982498215; }
if (n == 251) { return 12776523572924732586037033894655031898659556447352249; }
if (n == 131) { return 1066340417491710595814572169; }
if (n == 252) { return 20672849399056463095319772838289364792345825123228624; }
if (n == 132) { return 1725375039079340637797070384; }
if (n == 253) { return 33449372971981195681356806732944396691005381570580873; }
if (n == 133) { return 2791715456571051233611642553; }
if (n == 254) { return 54122222371037658776676579571233761483351206693809497; }
if (n == 134) { return 4517090495650391871408712937; }
if (n == 255) { return 87571595343018854458033386304178158174356588264390370; }
if (n == 135) { return 7308805952221443105020355490; }
if (n == 256) { return 141693817714056513234709965875411919657707794958199867; }
if (n == 136) { return 11825896447871834976429068427; }
if (n == 257) { return 229265413057075367692743352179590077832064383222590237; }
if (n == 137) { return 19134702400093278081449423917; }
if (n == 258) { return 370959230771131880927453318055001997489772178180790104; }
if (n == 138) { return 30960598847965113057878492344; }
if (n == 259) { return 600224643828207248620196670234592075321836561403380341; }
if (n == 139) { return 50095301248058391139327916261; }
if (n == 30) { return 832040; }
if (n == 31) { return 1346269; }
if (n == 32) { return 2178309; }
if (n == 33) { return 3524578; }
if (n == 34) { return 5702887; }
if (n == 35) { return 9227465; }
if (n == 36) { return 14930352; }
if (n == 37) { return 24157817; }
if (n == 38) { return 39088169; }
if (n == 39) { return 63245986; }
if (n == 260) { return 971183874599339129547649988289594072811608739584170445; }
if (n == 140) { return 81055900096023504197206408605; }
if (n == 261) { return 1571408518427546378167846658524186148133445300987550786; }
if (n == 141) { return 131151201344081895336534324866; }
if (n == 262) { return 2542592393026885507715496646813780220945054040571721231; }
if (n == 142) { return 212207101440105399533740733471; }
if (n == 263) { return 4114000911454431885883343305337966369078499341559272017; }
if (n == 143) { return 343358302784187294870275058337; }
if (n == 264) { return 6656593304481317393598839952151746590023553382130993248; }
if (n == 144) { return 555565404224292694404015791808; }
if (n == 265) { return 10770594215935749279482183257489712959102052723690265265; }
if (n == 145) { return 898923707008479989274290850145; }
if (n == 266) { return 17427187520417066673081023209641459549125606105821258513; }
if (n == 146) { return 1454489111232772683678306641953; }
if (n == 267) { return 28197781736352815952563206467131172508227658829511523778; }
if (n == 147) { return 2353412818241252672952597492098; }
if (n == 268) { return 45624969256769882625644229676772632057353264935332782291; }
if (n == 148) { return 3807901929474025356630904134051; }
if (n == 269) { return 73822750993122698578207436143903804565580923764844306069; }
if (n == 149) { return 6161314747715278029583501626149; }
if (n == 40) { return 102334155; }
if (n == 41) { return 165580141; }
if (n == 42) { return 267914296; }
if (n == 43) { return 433494437; }
if (n == 44) { return 701408733; }
if (n == 45) { return 1134903170; }
if (n == 46) { return 1836311903; }
if (n == 47) { return 2971215073; }
if (n == 48) { return 4807526976; }
if (n == 49) { return 7778742049; }
if (n == 270) { return 119447720249892581203851665820676436622934188700177088360; }
if (n == 150) { return 9969216677189303386214405760200; }
if (n == 271) { return 193270471243015279782059101964580241188515112465021394429; }
if (n == 151) { return 16130531424904581415797907386349; }
if (n == 272) { return 312718191492907860985910767785256677811449301165198482789; }
if (n == 152) { return 26099748102093884802012313146549; }
if (n == 273) { return 505988662735923140767969869749836918999964413630219877218; }
if (n == 153) { return 42230279526998466217810220532898; }
if (n == 274) { return 818706854228831001753880637535093596811413714795418360007; }
if (n == 154) { return 68330027629092351019822533679447; }
if (n == 275) { return 1324695516964754142521850507284930515811378128425638237225; }
if (n == 155) { return 110560307156090817237632754212345; }
if (n == 276) { return 2143402371193585144275731144820024112622791843221056597232; }
if (n == 156) { return 178890334785183168257455287891792; }
if (n == 277) { return 3468097888158339286797581652104954628434169971646694834457; }
if (n == 157) { return 289450641941273985495088042104137; }
if (n == 278) { return 5611500259351924431073312796924978741056961814867751431689; }
if (n == 158) { return 468340976726457153752543329995929; }
if (n == 279) { return 9079598147510263717870894449029933369491131786514446266146; }
if (n == 159) { return 757791618667731139247631372100066; }
if (n == 50) { return 12586269025; }
if (n == 51) { return 20365011074; }
if (n == 52) { return 32951280099; }
if (n == 53) { return 53316291173; }
if (n == 54) { return 86267571272; }
if (n == 55) { return 139583862445; }
if (n == 56) { return 225851433717; }
if (n == 57) { return 365435296162; }
if (n == 58) { return 591286729879; }
if (n == 59) { return 956722026041; }
if (n == 280) { return 14691098406862188148944207245954912110548093601382197697835; }
if (n == 160) { return 1226132595394188293000174702095995; }
if (n == 281) { return 23770696554372451866815101694984845480039225387896643963981; }
if (n == 161) { return 1983924214061919432247806074196061; }
if (n == 282) { return 38461794961234640015759308940939757590587318989278841661816; }
if (n == 162) { return 3210056809456107725247980776292056; }
if (n == 283) { return 62232491515607091882574410635924603070626544377175485625797; }
if (n == 163) { return 5193981023518027157495786850488117; }
if (n == 284) { return 100694286476841731898333719576864360661213863366454327287613; }
if (n == 164) { return 8404037832974134882743767626780173; }
if (n == 285) { return 162926777992448823780908130212788963731840407743629812913410; }
if (n == 165) { return 13598018856492162040239554477268290; }
if (n == 286) { return 263621064469290555679241849789653324393054271110084140201023; }
if (n == 166) { return 22002056689466296922983322104048463; }
if (n == 287) { return 426547842461739379460149980002442288124894678853713953114433; }
if (n == 167) { return 35600075545958458963222876581316753; }
if (n == 288) { return 690168906931029935139391829792095612517948949963798093315456; }
if (n == 168) { return 57602132235424755886206198685365216; }
if (n == 289) { return 1116716749392769314599541809794537900642843628817512046429889; }
if (n == 169) { return 93202207781383214849429075266681969; }
if (n == 60) { return 1548008755920; }
if (n == 61) { return 2504730781961; }
if (n == 62) { return 4052739537881; }
if (n == 63) { return 6557470319842; }
if (n == 64) { return 10610209857723; }
if (n == 65) { return 17167680177565; }
if (n == 66) { return 27777890035288; }
if (n == 67) { return 44945570212853; }
if (n == 68) { return 72723460248141; }
if (n == 69) { return 117669030460994; }
if (n == 290) { return 1806885656323799249738933639586633513160792578781310139745345; }
if (n == 170) { return 150804340016807970735635273952047185; }
if (n == 291) { return 2923602405716568564338475449381171413803636207598822186175234; }
if (n == 171) { return 244006547798191185585064349218729154; }
if (n == 292) { return 4730488062040367814077409088967804926964428786380132325920579; }
if (n == 172) { return 394810887814999156320699623170776339; }
if (n == 293) { return 7654090467756936378415884538348976340768064993978954512095813; }
if (n == 173) { return 638817435613190341905763972389505493; }
if (n == 294) { return 12384578529797304192493293627316781267732493780359086838016392; }
if (n == 174) { return 1033628323428189498226463595560281832; }
if (n == 295) { return 20038668997554240570909178165665757608500558774338041350112205; }
if (n == 175) { return 1672445759041379840132227567949787325; }
if (n == 296) { return 32423247527351544763402471792982538876233052554697128188128597; }
if (n == 176) { return 2706074082469569338358691163510069157; }
if (n == 297) { return 52461916524905785334311649958648296484733611329035169538240802; }
if (n == 177) { return 4378519841510949178490918731459856482; }
if (n == 298) { return 84885164052257330097714121751630835360966663883732297726369399; }
if (n == 178) { return 7084593923980518516849609894969925639; }
if (n == 299) { return 137347080577163115432025771710279131845700275212767467264610201; }
if (n == 179) { return 11463113765491467695340528626429782121; }
if (n == 70) { return 190392490709135; }
if (n == 71) { return 308061521170129; }
if (n == 72) { return 498454011879264; }
if (n == 73) { return 806515533049393; }
if (n == 74) { return 1304969544928657; }
if (n == 75) { return 2111485077978050; }
if (n == 76) { return 3416454622906707; }
if (n == 77) { return 5527939700884757; }
if (n == 78) { return 8944394323791464; }
if (n == 79) { return 14472334024676221; }
if (n == 180) { return 18547707689471986212190138521399707760; }
if (n == 181) { return 30010821454963453907530667147829489881; }
if (n == 182) { return 48558529144435440119720805669229197641; }
if (n == 183) { return 78569350599398894027251472817058687522; }
if (n == 184) { return 127127879743834334146972278486287885163; }
if (n == 185) { return 205697230343233228174223751303346572685; }
if (n == 186) { return 332825110087067562321196029789634457848; }
if (n == 187) { return 538522340430300790495419781092981030533; }
if (n == 188) { return 871347450517368352816615810882615488381; }
if (n == 189) { return 1409869790947669143312035591975596518914; }
if (n == 80) { return 23416728348467685; }
if (n == 81) { return 37889062373143906; }
if (n == 82) { return 61305790721611591; }
if (n == 83) { return 99194853094755497; }
if (n == 84) { return 160500643816367088; }
if (n == 85) { return 259695496911122585; }
if (n == 86) { return 420196140727489673; }
if (n == 87) { return 679891637638612258; }
if (n == 88) { return 1100087778366101931; }
if (n == 89) { return 1779979416004714189; }
if (n == 190) { return 2281217241465037496128651402858212007295; }
if (n == 191) { return 3691087032412706639440686994833808526209; }
if (n == 192) { return 5972304273877744135569338397692020533504; }
if (n == 193) { return 9663391306290450775010025392525829059713; }
if (n == 194) { return 15635695580168194910579363790217849593217; }
if (n == 195) { return 25299086886458645685589389182743678652930; }
if (n == 196) { return 40934782466626840596168752972961528246147; }
if (n == 197) { return 66233869353085486281758142155705206899077; }
if (n == 198) { return 107168651819712326877926895128666735145224; }
if (n == 199) { return 173402521172797813159685037284371942044301; }
if (n == 90) { return 2880067194370816120; }
if (n == 91) { return 4660046610375530309; }
if (n == 92) { return 7540113804746346429; }
if (n == 93) { return 12200160415121876738; }
if (n == 94) { return 19740274219868223167; }
if (n == 95) { return 31940434634990099905; }
if (n == 96) { return 51680708854858323072; }
if (n == 97) { return 83621143489848422977; }
if (n == 98) { return 135301852344706746049; }
if (n == 99) { return 218922995834555169026; }
if (n == 300) { return 222232244629420445529739893461909967206666939096499764990979600; }
if (n == 301) { return 359579325206583560961765665172189099052367214309267232255589801; }
if (n == 302) { return 581811569836004006491505558634099066259034153405766997246569401; }
if (n == 303) { return 941390895042587567453271223806288165311401367715034229502159202; }
if (n == 304) { return 1523202464878591573944776782440387231570435521120801226748728603; }
if (n == 305) { return 2464593359921179141398048006246675396881836888835835456250887805; }
if (n == 306) { return 3987795824799770715342824788687062628452272409956636682999616408; }
if (n == 307) { return 6452389184720949856740872794933738025334109298792472139250504213; }
if (n == 308) { return 10440185009520720572083697583620800653786381708749108822250120621; }
if (n == 309) { return 16892574194241670428824570378554538679120491007541580961500624834; }
if (n == 310) { return 27332759203762391000908267962175339332906872716290689783750745455; }
if (n == 311) { return 44225333398004061429732838340729878012027363723832270745251370289; }
if (n == 312) { return 71558092601766452430641106302905217344934236440122960529002115744; }
if (n == 313) { return 115783425999770513860373944643635095356961600163955231274253486033; }
if (n == 314) { return 187341518601536966291015050946540312701895836604078191803255601777; }
if (n == 315) { return 303124944601307480151388995590175408058857436768033423077509087810; }
if (n == 316) { return 490466463202844446442404046536715720760753273372111614880764689587; }
if (n == 317) { return 793591407804151926593793042126891128819610710140145037958273777397; }
if (n == 318) { return 1284057871006996373036197088663606849580363983512256652839038466984; }
if (n == 319) { return 2077649278811148299629990130790497978399974693652401690797312244381; }
if (n == 320) { return 3361707149818144672666187219454104827980338677164658343636350711365; }
if (n == 200) { return 280571172992510140037611932413038677189525; }
if (n == 321) { return 5439356428629292972296177350244602806380313370817060034433662955746; }
if (n == 201) { return 453973694165307953197296969697410619233826; }
if (n == 322) { return 8801063578447437644962364569698707634360652047981718378070013667111; }
if (n == 202) { return 734544867157818093234908902110449296423351; }
if (n == 323) { return 14240420007076730617258541919943310440740965418798778412503676622857; }
if (n == 203) { return 1188518561323126046432205871807859915657177; }
if (n == 324) { return 23041483585524168262220906489642018075101617466780496790573690289968; }
if (n == 204) { return 1923063428480944139667114773918309212080528; }
if (n == 325) { return 37281903592600898879479448409585328515842582885579275203077366912825; }
if (n == 205) { return 3111581989804070186099320645726169127737705; }
if (n == 326) { return 60323387178125067141700354899227346590944200352359771993651057202793; }
if (n == 206) { return 5034645418285014325766435419644478339818233; }
if (n == 327) { return 97605290770725966021179803308812675106786783237939047196728424115618; }
if (n == 207) { return 8146227408089084511865756065370647467555938; }
if (n == 328) { return 157928677948851033162880158208040021697730983590298819190379481318411; }
if (n == 208) { return 13180872826374098837632191485015125807374171; }
if (n == 329) { return 255533968719576999184059961516852696804517766828237866387107905434029; }
if (n == 209) { return 21327100234463183349497947550385773274930109; }
if (n == 330) { return 413462646668428032346940119724892718502248750418536685577487386752440; }
if (n == 210) { return 34507973060837282187130139035400899082304280; }
if (n == 331) { return 668996615388005031531000081241745415306766517246774551964595292186469; }
if (n == 211) { return 55835073295300465536628086585786672357234389; }
if (n == 332) { return 1082459262056433063877940200966638133809015267665311237542082678938909; }
if (n == 212) { return 90343046356137747723758225621187571439538669; }
if (n == 333) { return 1751455877444438095408940282208383549115781784912085789506677971125378; }
if (n == 213) { return 146178119651438213260386312206974243796773058; }
if (n == 334) { return 2833915139500871159286880483175021682924797052577397027048760650064287; }
if (n == 214) { return 236521166007575960984144537828161815236311727; }
if (n == 335) { return 4585371016945309254695820765383405232040578837489482816555438621189665; }
if (n == 215) { return 382699285659014174244530850035136059033084785; }
if (n == 336) { return 7419286156446180413982701248558426914965375890066879843604199271253952; }
if (n == 216) { return 619220451666590135228675387863297874269396512; }
if (n == 337) { return 12004657173391489668678522013941832147005954727556362660159637892443617; }
if (n == 217) { return 1001919737325604309473206237898433933302481297; }
if (n == 338) { return 19423943329837670082661223262500259061971330617623242503763837163697569; }
if (n == 218) { return 1621140188992194444701881625761731807571877809; }
if (n == 339) { return 31428600503229159751339745276442091208977285345179605163923475056141186; }
if (n == 219) { return 2623059926317798754175087863660165740874359106; }
if (n == 340) { return 50852543833066829834000968538942350270948615962802847667687312219838755; }
if (n == 220) { return 4244200115309993198876969489421897548446236915; }
if (n == 341) { return 82281144336295989585340713815384441479925901307982452831610787275979941; }
if (n == 100) { return 354224848179261915075; }
if (n == 221) { return 6867260041627791953052057353082063289320596021; }
if (n == 342) { return 133133688169362819419341682354326791750874517270785300499298099495818696; }
if (n == 101) { return 573147844013817084101; }
if (n == 222) { return 11111460156937785151929026842503960837766832936; }
if (n == 343) { return 215414832505658809004682396169711233230800418578767753330908886771798637; }
if (n == 102) { return 927372692193078999176; }
if (n == 223) { return 17978720198565577104981084195586024127087428957; }
if (n == 344) { return 348548520675021628424024078524038024981674935849553053830206986267617333; }
if (n == 103) { return 1500520536206896083277; }
if (n == 224) { return 29090180355503362256910111038089984964854261893; }
if (n == 345) { return 563963353180680437428706474693749258212475354428320807161115873039415970; }
if (n == 104) { return 2427893228399975082453; }
if (n == 225) { return 47068900554068939361891195233676009091941690850; }
if (n == 346) { return 912511873855702065852730553217787283194150290277873860991322859307033303; }
if (n == 105) { return 3928413764606871165730; }
if (n == 226) { return 76159080909572301618801306271765994056795952743; }
if (n == 347) { return 1476475227036382503281437027911536541406625644706194668152438732346449273; }
if (n == 106) { return 6356306993006846248183; }
if (n == 227) { return 123227981463641240980692501505442003148737643593; }
if (n == 348) { return 2388987100892084569134167581129323824600775934984068529143761591653482576; }
if (n == 107) { return 10284720757613717413913; }
if (n == 228) { return 199387062373213542599493807777207997205533596336; }
if (n == 349) { return 3865462327928467072415604609040860366007401579690263197296200323999931849; }
if (n == 108) { return 16641027750620563662096; }
if (n == 229) { return 322615043836854783580186309282650000354271239929; }
if (n == 109) { return 26925748508234281076009; }
return 0;
}


;; testable
tuple fibonacci_sequence(int n, int k) method_id {
    tuple res = empty_tuple();
    while (k > 0) {
        res~tpush(fib(n));
        n = n + 1;
        k = k - 1;
    }
    return res;
}
