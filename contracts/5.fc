{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=370; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

int tlen(tuple t) asm "TLEN";
forall X -> X tget(tuple t, int idx) asm "INDEXVAR";

global tuple fibs1;
global tuple fibs2;

() recv_internal() {
}


tuple get_fibs1() {
    tuple fibs = empty_tuple(); 
  fibs~tpush(0);
fibs~tpush(1);
fibs~tpush(1);
fibs~tpush(2);
fibs~tpush(3);
fibs~tpush(5);
fibs~tpush(8);
fibs~tpush(13);
fibs~tpush(21);
fibs~tpush(34);
fibs~tpush(55);
fibs~tpush(89);
fibs~tpush(144);
fibs~tpush(233);
fibs~tpush(377);
fibs~tpush(610);
fibs~tpush(987);
fibs~tpush(1597);
fibs~tpush(2584);
fibs~tpush(4181);
fibs~tpush(6765);
fibs~tpush(10946);
fibs~tpush(17711);
fibs~tpush(28657);
fibs~tpush(46368);
fibs~tpush(75025);
fibs~tpush(121393);
fibs~tpush(196418);
fibs~tpush(317811);
fibs~tpush(514229);
fibs~tpush(832040);
fibs~tpush(1346269);
fibs~tpush(2178309);
fibs~tpush(3524578);
fibs~tpush(5702887);
fibs~tpush(9227465);
fibs~tpush(14930352);
fibs~tpush(24157817);
fibs~tpush(39088169);
fibs~tpush(63245986);
fibs~tpush(102334155);
fibs~tpush(165580141);
fibs~tpush(267914296);
fibs~tpush(433494437);
fibs~tpush(701408733);
fibs~tpush(1134903170);
fibs~tpush(1836311903);
fibs~tpush(2971215073);
fibs~tpush(4807526976);
fibs~tpush(7778742049);
fibs~tpush(12586269025);
fibs~tpush(20365011074);
fibs~tpush(32951280099);
fibs~tpush(53316291173);
fibs~tpush(86267571272);
fibs~tpush(139583862445);
fibs~tpush(225851433717);
fibs~tpush(365435296162);
fibs~tpush(591286729879);
fibs~tpush(956722026041);
fibs~tpush(1548008755920);
fibs~tpush(2504730781961);
fibs~tpush(4052739537881);
fibs~tpush(6557470319842);
fibs~tpush(10610209857723);
fibs~tpush(17167680177565);
fibs~tpush(27777890035288);
fibs~tpush(44945570212853);
fibs~tpush(72723460248141);
fibs~tpush(117669030460994);
fibs~tpush(190392490709135);
fibs~tpush(308061521170129);
fibs~tpush(498454011879264);
fibs~tpush(806515533049393);
fibs~tpush(1304969544928657);
fibs~tpush(2111485077978050);
fibs~tpush(3416454622906707);
fibs~tpush(5527939700884757);
fibs~tpush(8944394323791464);
fibs~tpush(14472334024676221);
fibs~tpush(23416728348467685);
fibs~tpush(37889062373143906);
fibs~tpush(61305790721611591);
fibs~tpush(99194853094755497);
fibs~tpush(160500643816367088);
fibs~tpush(259695496911122585);
fibs~tpush(420196140727489673);
fibs~tpush(679891637638612258);
fibs~tpush(1100087778366101931);
fibs~tpush(1779979416004714189);
fibs~tpush(2880067194370816120);
fibs~tpush(4660046610375530309);
fibs~tpush(7540113804746346429);
fibs~tpush(12200160415121876738);
fibs~tpush(19740274219868223167);
fibs~tpush(31940434634990099905);
fibs~tpush(51680708854858323072);
fibs~tpush(83621143489848422977);
fibs~tpush(135301852344706746049);
fibs~tpush(218922995834555169026);
fibs~tpush(354224848179261915075);
fibs~tpush(573147844013817084101);
fibs~tpush(927372692193078999176);
fibs~tpush(1500520536206896083277);
fibs~tpush(2427893228399975082453);
fibs~tpush(3928413764606871165730);
fibs~tpush(6356306993006846248183);
fibs~tpush(10284720757613717413913);
fibs~tpush(16641027750620563662096);
fibs~tpush(26925748508234281076009);
fibs~tpush(43566776258854844738105);
fibs~tpush(70492524767089125814114);
fibs~tpush(114059301025943970552219);
fibs~tpush(184551825793033096366333);
fibs~tpush(298611126818977066918552);
fibs~tpush(483162952612010163284885);
fibs~tpush(781774079430987230203437);
fibs~tpush(1264937032042997393488322);
fibs~tpush(2046711111473984623691759);
fibs~tpush(3311648143516982017180081);
fibs~tpush(5358359254990966640871840);
fibs~tpush(8670007398507948658051921);
fibs~tpush(14028366653498915298923761);
fibs~tpush(22698374052006863956975682);
fibs~tpush(36726740705505779255899443);
fibs~tpush(59425114757512643212875125);
fibs~tpush(96151855463018422468774568);
fibs~tpush(155576970220531065681649693);
fibs~tpush(251728825683549488150424261);
fibs~tpush(407305795904080553832073954);
fibs~tpush(659034621587630041982498215);
fibs~tpush(1066340417491710595814572169);
fibs~tpush(1725375039079340637797070384);
fibs~tpush(2791715456571051233611642553);
fibs~tpush(4517090495650391871408712937);
fibs~tpush(7308805952221443105020355490);
fibs~tpush(11825896447871834976429068427);
fibs~tpush(19134702400093278081449423917);
fibs~tpush(30960598847965113057878492344);
fibs~tpush(50095301248058391139327916261);
fibs~tpush(81055900096023504197206408605);
fibs~tpush(131151201344081895336534324866);
fibs~tpush(212207101440105399533740733471);
fibs~tpush(343358302784187294870275058337);
fibs~tpush(555565404224292694404015791808);
fibs~tpush(898923707008479989274290850145);
fibs~tpush(1454489111232772683678306641953);
fibs~tpush(2353412818241252672952597492098);
fibs~tpush(3807901929474025356630904134051);
fibs~tpush(6161314747715278029583501626149);
fibs~tpush(9969216677189303386214405760200);
fibs~tpush(16130531424904581415797907386349);
fibs~tpush(26099748102093884802012313146549);
fibs~tpush(42230279526998466217810220532898);
fibs~tpush(68330027629092351019822533679447);
fibs~tpush(110560307156090817237632754212345);
fibs~tpush(178890334785183168257455287891792);
fibs~tpush(289450641941273985495088042104137);
fibs~tpush(468340976726457153752543329995929);
fibs~tpush(757791618667731139247631372100066);
fibs~tpush(1226132595394188293000174702095995);
fibs~tpush(1983924214061919432247806074196061);
fibs~tpush(3210056809456107725247980776292056);
fibs~tpush(5193981023518027157495786850488117);
fibs~tpush(8404037832974134882743767626780173);
fibs~tpush(13598018856492162040239554477268290);
fibs~tpush(22002056689466296922983322104048463);
fibs~tpush(35600075545958458963222876581316753);
fibs~tpush(57602132235424755886206198685365216);
fibs~tpush(93202207781383214849429075266681969);
fibs~tpush(150804340016807970735635273952047185);
fibs~tpush(244006547798191185585064349218729154);
fibs~tpush(394810887814999156320699623170776339);
fibs~tpush(638817435613190341905763972389505493);
fibs~tpush(1033628323428189498226463595560281832);
fibs~tpush(1672445759041379840132227567949787325);
fibs~tpush(2706074082469569338358691163510069157);
fibs~tpush(4378519841510949178490918731459856482);
fibs~tpush(7084593923980518516849609894969925639);
fibs~tpush(11463113765491467695340528626429782121);
fibs~tpush(18547707689471986212190138521399707760);
fibs~tpush(30010821454963453907530667147829489881);
fibs~tpush(48558529144435440119720805669229197641);
fibs~tpush(78569350599398894027251472817058687522);
fibs~tpush(127127879743834334146972278486287885163);
fibs~tpush(205697230343233228174223751303346572685);
fibs~tpush(332825110087067562321196029789634457848);
fibs~tpush(538522340430300790495419781092981030533);
fibs~tpush(871347450517368352816615810882615488381);
fibs~tpush(1409869790947669143312035591975596518914);
fibs~tpush(2281217241465037496128651402858212007295);
fibs~tpush(3691087032412706639440686994833808526209);
fibs~tpush(5972304273877744135569338397692020533504);
fibs~tpush(9663391306290450775010025392525829059713);
fibs~tpush(15635695580168194910579363790217849593217);
fibs~tpush(25299086886458645685589389182743678652930);
fibs~tpush(40934782466626840596168752972961528246147);
fibs~tpush(66233869353085486281758142155705206899077);
fibs~tpush(107168651819712326877926895128666735145224);
fibs~tpush(173402521172797813159685037284371942044301);
fibs~tpush(280571172992510140037611932413038677189525);
fibs~tpush(453973694165307953197296969697410619233826);
fibs~tpush(734544867157818093234908902110449296423351);
fibs~tpush(1188518561323126046432205871807859915657177);
fibs~tpush(1923063428480944139667114773918309212080528);
fibs~tpush(3111581989804070186099320645726169127737705);
fibs~tpush(5034645418285014325766435419644478339818233);
fibs~tpush(8146227408089084511865756065370647467555938);
fibs~tpush(13180872826374098837632191485015125807374171);
fibs~tpush(21327100234463183349497947550385773274930109);
fibs~tpush(34507973060837282187130139035400899082304280);
fibs~tpush(55835073295300465536628086585786672357234389);
fibs~tpush(90343046356137747723758225621187571439538669);
fibs~tpush(146178119651438213260386312206974243796773058);
fibs~tpush(236521166007575960984144537828161815236311727);
fibs~tpush(382699285659014174244530850035136059033084785);
fibs~tpush(619220451666590135228675387863297874269396512);
fibs~tpush(1001919737325604309473206237898433933302481297);
fibs~tpush(1621140188992194444701881625761731807571877809);
fibs~tpush(2623059926317798754175087863660165740874359106);
fibs~tpush(4244200115309993198876969489421897548446236915);
fibs~tpush(6867260041627791953052057353082063289320596021);
fibs~tpush(11111460156937785151929026842503960837766832936);
fibs~tpush(17978720198565577104981084195586024127087428957);
fibs~tpush(29090180355503362256910111038089984964854261893);
fibs~tpush(47068900554068939361891195233676009091941690850);
fibs~tpush(76159080909572301618801306271765994056795952743);
fibs~tpush(123227981463641240980692501505442003148737643593);
fibs~tpush(199387062373213542599493807777207997205533596336);
fibs~tpush(322615043836854783580186309282650000354271239929);
fibs~tpush(522002106210068326179680117059857997559804836265);
fibs~tpush(844617150046923109759866426342507997914076076194);
fibs~tpush(1366619256256991435939546543402365995473880912459);
fibs~tpush(2211236406303914545699412969744873993387956988653);
fibs~tpush(3577855662560905981638959513147239988861837901112);
fibs~tpush(5789092068864820527338372482892113982249794889765);
fibs~tpush(9366947731425726508977331996039353971111632790877);
fibs~tpush(15156039800290547036315704478931467953361427680642);
fibs~tpush(24522987531716273545293036474970821924473060471519);
fibs~tpush(39679027332006820581608740953902289877834488152161);
fibs~tpush(64202014863723094126901777428873111802307548623680);
fibs~tpush(103881042195729914708510518382775401680142036775841);
fibs~tpush(168083057059453008835412295811648513482449585399521);
fibs~tpush(271964099255182923543922814194423915162591622175362);

return fibs;
}

tuple get_fibs2() {
    tuple fibs = empty_tuple();
    fibs~tpush(440047156314635932379335110006072428645041207574883);
fibs~tpush(712011255569818855923257924200496343807632829750245);
fibs~tpush(1152058411884454788302593034206568772452674037325128);
fibs~tpush(1864069667454273644225850958407065116260306867075373);
fibs~tpush(3016128079338728432528443992613633888712980904400501);
fibs~tpush(4880197746793002076754294951020699004973287771475874);
fibs~tpush(7896325826131730509282738943634332893686268675876375);
fibs~tpush(12776523572924732586037033894655031898659556447352249);
fibs~tpush(20672849399056463095319772838289364792345825123228624);
fibs~tpush(33449372971981195681356806732944396691005381570580873);
fibs~tpush(54122222371037658776676579571233761483351206693809497);
fibs~tpush(87571595343018854458033386304178158174356588264390370);
fibs~tpush(141693817714056513234709965875411919657707794958199867);
fibs~tpush(229265413057075367692743352179590077832064383222590237);
fibs~tpush(370959230771131880927453318055001997489772178180790104);
fibs~tpush(600224643828207248620196670234592075321836561403380341);
fibs~tpush(971183874599339129547649988289594072811608739584170445);
fibs~tpush(1571408518427546378167846658524186148133445300987550786);
fibs~tpush(2542592393026885507715496646813780220945054040571721231);
fibs~tpush(4114000911454431885883343305337966369078499341559272017);
fibs~tpush(6656593304481317393598839952151746590023553382130993248);
fibs~tpush(10770594215935749279482183257489712959102052723690265265);
fibs~tpush(17427187520417066673081023209641459549125606105821258513);
fibs~tpush(28197781736352815952563206467131172508227658829511523778);
fibs~tpush(45624969256769882625644229676772632057353264935332782291);
fibs~tpush(73822750993122698578207436143903804565580923764844306069);
fibs~tpush(119447720249892581203851665820676436622934188700177088360);
fibs~tpush(193270471243015279782059101964580241188515112465021394429);
fibs~tpush(312718191492907860985910767785256677811449301165198482789);
fibs~tpush(505988662735923140767969869749836918999964413630219877218);
fibs~tpush(818706854228831001753880637535093596811413714795418360007);
fibs~tpush(1324695516964754142521850507284930515811378128425638237225);
fibs~tpush(2143402371193585144275731144820024112622791843221056597232);
fibs~tpush(3468097888158339286797581652104954628434169971646694834457);
fibs~tpush(5611500259351924431073312796924978741056961814867751431689);
fibs~tpush(9079598147510263717870894449029933369491131786514446266146);
fibs~tpush(14691098406862188148944207245954912110548093601382197697835);
fibs~tpush(23770696554372451866815101694984845480039225387896643963981);
fibs~tpush(38461794961234640015759308940939757590587318989278841661816);
fibs~tpush(62232491515607091882574410635924603070626544377175485625797);
fibs~tpush(100694286476841731898333719576864360661213863366454327287613);
fibs~tpush(162926777992448823780908130212788963731840407743629812913410);
fibs~tpush(263621064469290555679241849789653324393054271110084140201023);
fibs~tpush(426547842461739379460149980002442288124894678853713953114433);
fibs~tpush(690168906931029935139391829792095612517948949963798093315456);
fibs~tpush(1116716749392769314599541809794537900642843628817512046429889);
fibs~tpush(1806885656323799249738933639586633513160792578781310139745345);
fibs~tpush(2923602405716568564338475449381171413803636207598822186175234);
fibs~tpush(4730488062040367814077409088967804926964428786380132325920579);
fibs~tpush(7654090467756936378415884538348976340768064993978954512095813);
fibs~tpush(12384578529797304192493293627316781267732493780359086838016392);
fibs~tpush(20038668997554240570909178165665757608500558774338041350112205);
fibs~tpush(32423247527351544763402471792982538876233052554697128188128597);
fibs~tpush(52461916524905785334311649958648296484733611329035169538240802);
fibs~tpush(84885164052257330097714121751630835360966663883732297726369399);
fibs~tpush(137347080577163115432025771710279131845700275212767467264610201);
fibs~tpush(222232244629420445529739893461909967206666939096499764990979600);
fibs~tpush(359579325206583560961765665172189099052367214309267232255589801);
fibs~tpush(581811569836004006491505558634099066259034153405766997246569401);
fibs~tpush(941390895042587567453271223806288165311401367715034229502159202);
fibs~tpush(1523202464878591573944776782440387231570435521120801226748728603);
fibs~tpush(2464593359921179141398048006246675396881836888835835456250887805);
fibs~tpush(3987795824799770715342824788687062628452272409956636682999616408);
fibs~tpush(6452389184720949856740872794933738025334109298792472139250504213);
fibs~tpush(10440185009520720572083697583620800653786381708749108822250120621);
fibs~tpush(16892574194241670428824570378554538679120491007541580961500624834);
fibs~tpush(27332759203762391000908267962175339332906872716290689783750745455);
fibs~tpush(44225333398004061429732838340729878012027363723832270745251370289);
fibs~tpush(71558092601766452430641106302905217344934236440122960529002115744);
fibs~tpush(115783425999770513860373944643635095356961600163955231274253486033);
fibs~tpush(187341518601536966291015050946540312701895836604078191803255601777);
fibs~tpush(303124944601307480151388995590175408058857436768033423077509087810);
fibs~tpush(490466463202844446442404046536715720760753273372111614880764689587);
fibs~tpush(793591407804151926593793042126891128819610710140145037958273777397);
fibs~tpush(1284057871006996373036197088663606849580363983512256652839038466984);
fibs~tpush(2077649278811148299629990130790497978399974693652401690797312244381);
fibs~tpush(3361707149818144672666187219454104827980338677164658343636350711365);
fibs~tpush(5439356428629292972296177350244602806380313370817060034433662955746);
fibs~tpush(8801063578447437644962364569698707634360652047981718378070013667111);
fibs~tpush(14240420007076730617258541919943310440740965418798778412503676622857);
fibs~tpush(23041483585524168262220906489642018075101617466780496790573690289968);
fibs~tpush(37281903592600898879479448409585328515842582885579275203077366912825);
fibs~tpush(60323387178125067141700354899227346590944200352359771993651057202793);
fibs~tpush(97605290770725966021179803308812675106786783237939047196728424115618);
fibs~tpush(157928677948851033162880158208040021697730983590298819190379481318411);
fibs~tpush(255533968719576999184059961516852696804517766828237866387107905434029);
fibs~tpush(413462646668428032346940119724892718502248750418536685577487386752440);
fibs~tpush(668996615388005031531000081241745415306766517246774551964595292186469);
fibs~tpush(1082459262056433063877940200966638133809015267665311237542082678938909);
fibs~tpush(1751455877444438095408940282208383549115781784912085789506677971125378);
fibs~tpush(2833915139500871159286880483175021682924797052577397027048760650064287);
fibs~tpush(4585371016945309254695820765383405232040578837489482816555438621189665);
fibs~tpush(7419286156446180413982701248558426914965375890066879843604199271253952);
fibs~tpush(12004657173391489668678522013941832147005954727556362660159637892443617);
fibs~tpush(19423943329837670082661223262500259061971330617623242503763837163697569);
fibs~tpush(31428600503229159751339745276442091208977285345179605163923475056141186);
fibs~tpush(50852543833066829834000968538942350270948615962802847667687312219838755);
fibs~tpush(82281144336295989585340713815384441479925901307982452831610787275979941);
fibs~tpush(133133688169362819419341682354326791750874517270785300499298099495818696);
fibs~tpush(215414832505658809004682396169711233230800418578767753330908886771798637);
fibs~tpush(348548520675021628424024078524038024981674935849553053830206986267617333);
fibs~tpush(563963353180680437428706474693749258212475354428320807161115873039415970);
fibs~tpush(912511873855702065852730553217787283194150290277873860991322859307033303);
fibs~tpush(1476475227036382503281437027911536541406625644706194668152438732346449273);
fibs~tpush(2388987100892084569134167581129323824600775934984068529143761591653482576);
fibs~tpush(3865462327928467072415604609040860366007401579690263197296200323999931849);
fibs~tpush(6254449428820551641549772190170184190608177514674331726439961915653414425);
fibs~tpush(10119911756749018713965376799211044556615579094364594923736162239653346274);
fibs~tpush(16374361185569570355515148989381228747223756609038926650176124155306760699);
fibs~tpush(26494272942318589069480525788592273303839335703403521573912286394960106973);
fibs~tpush(42868634127888159424995674777973502051063092312442448224088410550266867672);
fibs~tpush(69362907070206748494476200566565775354902428015845969798000696945226974645);
fibs~tpush(112231541198094907919471875344539277405965520328288418022089107495493842317);
fibs~tpush(181594448268301656413948075911105052760867948344134387820089804440720816962);
fibs~tpush(293825989466396564333419951255644330166833468672422805842178911936214659279);
fibs~tpush(475420437734698220747368027166749382927701417016557193662268716376935476241);
fibs~tpush(769246427201094785080787978422393713094534885688979999504447628313150135520);
fibs~tpush(1244666864935793005828156005589143096022236302705537193166716344690085611761);
fibs~tpush(2013913292136887790908943984011536809116771188394517192671163973003235747281);
fibs~tpush(3258580157072680796737099989600679905139007491100054385837880317693321359042);
fibs~tpush(5272493449209568587646043973612216714255778679494571578509044290696557106323);
fibs~tpush(8531073606282249384383143963212896619394786170594625964346924608389878465365);
fibs~tpush(13803567055491817972029187936825113333650564850089197542855968899086435571688);
fibs~tpush(22334640661774067356412331900038009953045351020683823507202893507476314037053);
fibs~tpush(36138207717265885328441519836863123286695915870773021050058862406562749608741);
fibs~tpush(58472848379039952684853851736901133239741266891456844557261755914039063645794);
fibs~tpush(94611056096305838013295371573764256526437182762229865607320618320601813254535);
return fibs;
}


int fib(int n) {
    if (n < 244) {
        return tget(fibs1, n);
    }
    return tget(fibs2, n - 244);
}


;; testable
tuple fibonacci_sequence(int n, int k) method_id {
    tuple res = empty_tuple();
    fibs1 = get_fibs1();
    fibs2 = get_fibs2();
    while (k > 0) {
        res~tpush(fib(n));
        n = n + 1;
        k = k - 1;
    }
    return res;
}
