{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

forall X -> X tget(tuple t, int idx) asm "INDEXVAR";
int tlen(tuple t) asm "TLEN";

() recv_internal() {
}

tuple multiply(tuple a, tuple b) {
    tuple result = empty_tuple();
    int i = 0;
    while (i < tlen(a)) {
        tuple row = empty_tuple();
        int j = 0;
        while (j < tlen(tget(b, 0))) {
            int val = 0;
            int k = 0;
            while (k < tlen(b)) {
                val += tget(tget(a, i), k) * tget(tget(b, k), j);
                k = k + 1;
            }
            row~tpush(val);
            j = j + 1;
        }
        i = i + 1;
        result~tpush(row);
    }
    return result;
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
    return multiply(matrixA, matrixB);
}
